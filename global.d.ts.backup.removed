// Global type declarations for the personal finance app

interface Profile {
  name: string;
  description?: string;
  isActive: boolean;
  createdAt: string;
}

interface ProfileAPI {
  create: (name: string, description?: string) => Promise<{ success: boolean; profileName: string }>;
  delete: (name: string) => Promise<{ success: boolean }>;
  switchTo: (name: string) => Promise<{ success: boolean; profileName: string }>;
  getCurrentProfile: () => Promise<{ profileName: string }>;
  listProfiles: () => Promise<{ profiles: Profile[] }>;
  migrateExistingDatabase: () => Promise<{ 
    success: boolean; 
    migrated: boolean; 
    profileName?: string 
  }>;
}

// Extend the existing ElectronAPI interface with profile support
declare global {
  interface Window {
    electronAPI: {
      database: any;
      accounts: any;
      envelopes: any;
      transactions: any;
      accountTransfers: any;
      balances: any;
      creditCardPayments: any;
      debt: any;
      compensation: any;
      profile: ProfileAPI;
    };
  }
}

export {};
